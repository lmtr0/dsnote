<!DOCTYPE node PUBLIC "-//freedesktop//DTD D-BUS Object Introspection 1.0//EN"
"http://www.freedesktop.org/standards/dbus/1.0/introspect.dtd">
<node>
<interface name="@info_dbus_app_interface@">
  <!--
      Currently active STT model

      A dict of model properties:
       [id]   => model ID
       [name] => model name
  -->
  <property name="ActiveSttModel" type="a{sv}" access="read">
    <annotation name="org.qtproject.QtDBus.QtTypeName" value="QVariantMap"/>
  </property>
  <signal name="ActiveSttModelPropertyChanged">
    <annotation name="org.qtproject.QtDBus.QtTypeName.Out0" value="QVariantMap"/>
    <arg name="activeSttModel" type="a{sv}" direction="out" />
  </signal>

  <!--
      Currently active TTS model

      A dict of model properties:
       [id]   => model ID
       [name] => model name
  -->
  <property name="ActiveTtsModel" type="a{sv}" access="read">
    <annotation name="org.qtproject.QtDBus.QtTypeName" value="QVariantMap"/>
  </property>
  <signal name="ActiveTtsModelPropertyChanged">
    <annotation name="org.qtproject.QtDBus.QtTypeName.Out0" value="QVariantMap"/>
    <arg name="activeTtsModel" type="a{sv}" direction="out" />
  </signal>

  <!--
      State of the application

      Supported states are:
       Unknown                 = 0
       NotConfigured           = 1
       Busy                    = 2
       Idle                    = 3
       ListeningManual         = 4
       ListeningAuto           = 5
       TranscribingFile        = 6
       ListeningSingleSentence = 7
       PlayingSpeech           = 8
       WritingSpeechToFile     = 9
       Translating             = 10
       RepairingText           = 11
       Importing               = 20
       Exporting               = 21
  -->
  <property name="State" type="i" access="read" />
  <signal name="StatePropertyChanged">
    <arg name="state" type="i" direction="out" />
  </signal>

  <!--
      State of the current task

      Supported states are:
       Idle           = 0
       SpeechDetected = 1
       Processing     = 2
       Initializing   = 3
       SpeechPlaying  = 4
       SpeechPaused   = 5
       Cancelling     = 6
  -->
  <property name="TaskState" type="i" access="read" />
  <signal name="TaskStatePropertyChanged">
    <arg name="state" type="i" direction="out" />
  </signal>

  <!--
      Invokes an action

      Supported actions (@action_name) are:
       start-listening
       start-listening-translate
       start-listening-active-window
       start-listening-translate-active-window
       start-listening-clipboard
       start-listening-translate-clipboard
       stop-listening
       start-reading *
       start-reading-clipboard *
       start-reading-text *
       pause-resume-reading
       cancel
       switch-to-next-stt-model
       switch-to-prev-stt-model
       switch-to-next-tts-model
       switch-to-prev-tts-model
       set-stt-model *
       set-tts-model *

      *) Optional @arguments dict used to pass additional options:
        [model-id] => model ID
        [text] => text to read
        [output-file] => output file path
  -->
  <method name="InvokeAction">
    <annotation name="org.qtproject.QtDBus.QtTypeName.Out0" value="QVariantMap"/>
    <annotation name="org.qtproject.QtDBus.QtTypeName.In1" value="QVariantMap"/>
    <arg name="action_name" type="s" direction="in" />
    <!-- optional arguments (e.g. model-id, text to read, output-file) -->
    <arg name="arguments" type="a{sv}" direction="in" />
    <arg name="result" type="a{sv}" direction="out" />
  </method>

  <!--
      Available STT models

      Returns list of maps:
       [x][id]   => model ID
       [x][name] => model name
  -->
  <method name="GetSttModels">
    <annotation name="org.qtproject.QtDBus.QtTypeName.Out0" value="QVariantList"/>
    <arg name="models" type="aa{sv}" direction="out" />
  </method>

  <!--
      Available TTS models

      Returns list of maps:
       [x][id]   => model ID
       [x][name] => model name
  -->
  <method name="GetTtsModels">
    <annotation name="org.qtproject.QtDBus.QtTypeName.Out0" value="QVariantList"/>
    <arg name="models" type="aa{sv}" direction="out" />
  </method>
</interface>
</node>

